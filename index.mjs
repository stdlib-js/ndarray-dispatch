// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function-array@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var u=function(e,r,t,n,i,a,s,o,u){var m,d,l,f;for(m=a,l=0;l<e;l++){for(d=u,f=0;f<r&&t[m+f*i]===s[d];f++)d+=o;if(f===r)return l;m+=n}return-1},m=e.isPrimitive,d=r,l=t.isPrimitive,f=n,p=i,h=a,g=s,v=o,c=u;var y=function(e,r,t,n,i,a){var s,o,u;if(p(e))u=e;else if(!f(e))throw new TypeError(v("invalid argument. First argument must be either a function or an array of functions. Value: `%s`.",e));if(!h(r))throw new TypeError(v("invalid argument. Second argument must be an array-like object. Value: `%s`.",r));if(!h(t)&&null!==t)throw new TypeError(v("invalid argument. Third argument must be an array-like object or `null`. Value: `%s`.",t));if(!d(n))throw new TypeError(v("invalid argument. Fourth argument must be a positive integer. Value: `%s`.",n));if(!m(i))throw new TypeError(v("invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.",i));if(!m(a))throw new TypeError(v("invalid argument. Sixth argument must be a nonnegative integer. Value: `%s`.",a));if(0===(s=i+a))throw new Error("invalid arguments. Interface must accept at least one input and/or output ndarray. Based on the provided arguments, `nin+nout` equals `0`.");if(n!==s)throw new Error("invalid arguments. Fourth argument does not equal the number of input and output ndarrays.");if(u){if(o=r.length/s,!l(o))throw new Error("invalid argument. Unexpected number of types. A type must be specified for each input and output ndarray for each provided ndarray function.")}else if(o=e.length,r.length!==o*s)throw new Error("invalid argument. Unexpected number of types. A type must be specified for each input and output ndarray for each provided ndarray function.");if(t&&t.length!==o)throw new Error("invalid argument. The third argument must have the same number of elements as the first argument.");return function(){var m,d,l,f,p,h,v;if((l=arguments.length)!==n){if(l<n)throw new Error("invalid invocation. Insufficient arguments.");throw new Error("invalid invocation. Too many arguments.")}for(m=[],d=[],v=0;v<n;v++){if(!g(p=arguments[v]))throw v<i?new TypeError("invalid argument. Input array argument must be an ndarray-like object."):new TypeError("invalid argument. Output array argument must be an ndarray-like object.");m.push(p),d.push(p.dtype)}if((f=c(o,s,r,s,1,0,d,1,0))<0)throw new TypeError("invalid arguments. Unable to resolve an ndarray function supporting the provided array argument data types.");h=u||e[f];t?h(m,t[f]):h(m);if(1===a)return m[s-1];if(0===a)return;return m.slice(i)}};export{y as default};
//# sourceMappingURL=index.mjs.map
